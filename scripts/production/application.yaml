#
# To deploy:
#
# kubectl apply -f scripts/deploy.yaml
#
#
apiVersion: apps/v1
kind: Deployment
metadata:
  name: application
spec:
  replicas: 1
  selector:
    matchLabels:
      app: application
  template:
    metadata:
      labels:
        app: application
    spec:
      containers: 
      - name: application
        image: $CONTAINER_REGISTRY/application:1
        imagePullPolicy: Always
        ports:
        - containerPort: 3000      
        env:
        - name: DOMAIN
          value: "$DOMAIN"
        - name: API
          value: "$API"
        - name: DB_URI
          value: "$DB_URI"
        - name: GOOGLE_CLIENT_ID
          value: "$GOOGLE_CLIENT_ID"
        - name: GOOGLE_CLIENT_SECRET
          value: "$GOOGLE_CLIENT_SECRET"
        - name: NEXTAUTH_SECRET
          value: "$NEXTAUTH_SECRET"
        - name: NEXTAUTH_URL
          value: "$NEXTAUTH_URL"          
        - name: CLOUDINARY_CLOUD_NAME
          value: "$CLOUDINARY_CLOUD_NAME"
        - name: CLOUDINARY_API_KEY
          value: "$CLOUDINARY_API_KEY"
        - name: CLOUDINARY_API_SECRET
          value: "$CLOUDINARY_API_SECRET"
        - name: STRIPE_API_KEY
          value: "$STRIPE_API_KEY"
        - name: STRIPE_SECRET_KEY
          value: "$STRIPE_SECRET_KEY"
        - name: STRIPE_TAX_RATE
          value: "$STRIPE_TAX_RATE"
        - name: STRIPE_SHIPPING_RATE
          value: "$STRIPE_SHIPPING_RATE"
        - name: STRIPE_WEBHOOK_SECRET
          value: "$STRIPE_WEBHOOK_SECRET"

---
apiVersion: v1
kind: Service
metadata:
  name: application
spec:
  selector:
    app: application
  ports:
  - port: 80
    protocol: TCP
    targetPort: 3000
  type: ClusterIP

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ingress
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-production
    nginx.ingress.kubernetes.io/rewrite-target: /$1
    nginx.ingress.kubernetes.io/use-regex: "true"
spec:
  ingressClassName: public
  tls:
  - hosts:
    - skycomposer.net #Use your domain
    secretName: tls-secret
  rules:
  - host: skycomposer.net #Use your domain
    http:
      paths:
      - path: /(.*)
        pathType: Prefix
        backend:
          service:
            name: application
            port:
              number: 80